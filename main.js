(()=>{WIDTH=1024;HEIGHT=768;BOARD_WIDTH=10;BOARD_HEIGHT=20;BLOCK_SIZE=64;var h=class extends Phaser.Scene{constructor(){super({key:"Example",active:!0}),this.container,this.level,this.center={x:WIDTH/2,y:this.HEIGHT/2},this.deltaX=this.center.x*2/8,this.gameScale=this.deltaX*1.5/this.center.x}preload(){this.load.spritesheet("tetris","assets/sprites/tetris.png",{frameWidth:64,frameHeight:64}),this.load.spritesheet("fullscreen","assets/ui/fullscreen.png",{frameWidth:64,frameHeight:64})}createTetrominoes(){this.I=this.add.container(this.deltaX,700).setScale(this.gameScale),this.L=this.add.container(this.deltaX*2,700).setScale(this.gameScale),this.J=this.add.container(this.deltaX*3,700).setScale(this.gameScale),this.O=this.add.container(this.deltaX*4,700).setScale(this.gameScale),this.S=this.add.container(this.deltaX*5,700).setScale(this.gameScale),this.T=this.add.container(this.deltaX*6,700).setScale(this.gameScale),this.Z=this.add.container(this.deltaX*7,700).setScale(this.gameScale);let t=this.add.sprite(-64,64,"tetris",0),a=this.add.sprite(-64,0,"tetris",0),s=this.add.sprite(0,0,"tetris",0),e=this.add.sprite(64,0,"tetris",0),i=this.add.sprite(-96,-32,"tetris",1),r=this.add.sprite(-32,-32,"tetris",1),l=this.add.sprite(32,-32,"tetris",1),d=this.add.sprite(96,-32,"tetris",1),n=this.add.sprite(-64,0,"tetris",2),c=this.add.sprite(0,0,"tetris",2),o=this.add.sprite(64,0,"tetris",2),p=this.add.sprite(64,64,"tetris",2),g=this.add.sprite(-32,-32,"tetris",3),m=this.add.sprite(-32,32,"tetris",3),T=this.add.sprite(32,-32,"tetris",3),D=this.add.sprite(32,32,"tetris",3),H=this.add.sprite(-64,64,"tetris",4),I=this.add.sprite(0,64,"tetris",4),S=this.add.sprite(0,0,"tetris",4),u=this.add.sprite(64,0,"tetris",4),O=this.add.sprite(-64,0,"tetris",5),A=this.add.sprite(0,0,"tetris",5),B=this.add.sprite(0,64,"tetris",5),_=this.add.sprite(64,64,"tetris",5),y=this.add.sprite(-64,0,"tetris",6),W=this.add.sprite(0,0,"tetris",6),f=this.add.sprite(0,64,"tetris",6),E=this.add.sprite(64,0,"tetris",6);this.L.add([t,a,s,e]),this.L.setData("tetromino",[[1,1],[-1,0],[0,0],[1,0]]),this.L.setData("tile",0),this.I.add([i,r,l,d]),this.I.setData("tetromino",[[-1,1],[0,1],[1,1],[2,1]]),this.I.setData("tile",1),this.J.add([n,c,o,p]),this.J.setData("tetromino",[[-1,1],[-1,0],[0,0],[1,0]]),this.J.setData("tile",2),this.O.add([g,m,T,D]),this.O.setData("tetromino",[[0,0],[1,0],[0,1],[1,1]]),this.O.setData("tile",3),this.S.add([H,I,S,u]),this.S.setData("tetromino",[[0,1],[1,1],[-1,0],[0,0]]),this.S.setData("tile",4),this.Z.add([O,A,B,_]),this.Z.setData("tetromino",[[-1,1],[0,1],[0,0],[1,0]]),this.Z.setData("tile",5),this.T.add([y,W,f,E]),this.T.setData("tetromino",[[0,1],[-1,0],[0,0],[1,0]]),this.T.setData("tile",6)}createTileMap(){this.level=Array.from({length:BOARD_HEIGHT+2},()=>Array.from({length:BOARD_WIDTH+2},(s,e)=>e===0?9:e===BOARD_WIDTH+1?11:7)),this.level[0]=Array.from({length:BOARD_WIDTH+2},()=>10),this.level[BOARD_HEIGHT+1]=Array.from({length:BOARD_WIDTH+2},()=>8),this.level[0][0]=17,this.level[0][BOARD_WIDTH+1]=18,this.level[BOARD_HEIGHT+1][0]=16,this.level[BOARD_HEIGHT+1][BOARD_WIDTH+1]=19,this.map=this.make.tilemap({data:this.level,tileWidth:64,tileHeight:64});let t=this.map.addTilesetImage("tetris"),a=this.map.createLayer(0,t,this.center.x-(BOARD_WIDTH/2+1)*BLOCK_SIZE*this.gameScale,BLOCK_SIZE*this.gameScale*5).setScale(this.gameScale)}setTile(t,a,s){this.map.putTileAt(s,t+1,BOARD_HEIGHT-a)}setTetromino(t,a,s){let e=s.getData("tetromino");for(let i=0;i<e.length;i++)for(let r=0;r<e[i].length-1;r++)this.setTile(t+e[i][r],a+e[i][r+1],s.getData("tile"))}addFullScreenToggle(){let t=this.add.image(this.WIDTH-16,16,"fullscreen",0).setOrigin(1,0).setScale(.25).setInteractive();t.on("pointerup",function(){this.scale.isFullscreen?(t.setFrame(0),this.scale.stopFullscreen()):(t.setFrame(1),this.scale.startFullscreen())},this)}create(){this.createTileMap(),this.createTetrominoes(),this.addFullScreenToggle()}update(){this.I.angle-=1,this.L.angle+=1,this.J.angle-=1,this.O.angle+=1,this.S.angle-=1,this.T.angle+=1,this.Z.angle-=1,this.setTetromino(1,5,this.T)}},R={type:Phaser.WEBGL,scale:{mode:Phaser.Scale.FIT,parent:"phaser-example",autoCenter:Phaser.Scale.CENTER_BOTH,width:WIDTH,height:HEIGHT},width:WIDTH,height:HEIGHT,backgroundColor:"#2d2d2d",scene:[h]},v=new Phaser.Game(R);})();
